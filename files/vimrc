"" Functions
" return to last line, when opening a file again
function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END

"" General options and preferences
scriptencoding utf-8
set encoding=utf-8

syntax on
set tabstop=4
set shiftwidth=4
set autoindent

" Colorscheme
colorscheme elflord
set bg=dark
set t_Co=256
" set colored column
set colorcolumn=80
" highlight trailing spaces and tabs
set list!
set listchars=tab:Â»Â·,trail:Â·

" set viminfo
set viminfo='10,"\100,:20,%,n~/.viminfo

" perl smartsearch: if lowercase, ignore case
set ignorecase
set smartcase
set incsearch

set scrolloff=5

" better file completition while opening files from vim
set wildmode=list:longest

"" File type specific options here
filetype indent plugin on

" never expand tabs in Makefiles - bugs them out
autocmd FileType make setlocal noexpandtab
" Perl: expand tabs, use fold markers
autocmd FileType perl setlocal expandtab
autocmd FileType perl setlocal foldmethod=marker foldlevel=1
" Clean tabs for .conf and apache files
autocmd FileType conf setlocal expandtab
autocmd FileType apache setlocal expandtab
" python settings
autocmd FileType python setlocal tabstop=8 expandtab shiftwidth=4 softtabstop=4
" javascript settings
autocmd FileType javascript setlocal tabstop=2 expandtab shiftwidth=2 softtabstop=2
" Puppet files, do not expand tabs, activate smartindent.
autocmd BufRead,BufNewFile *.pp setlocal noexpandtab smartindent
" AWS CFN files.
autocmd BufRead,BufNewFile *.template setlocal ft=json
" .yaml files.
autocmd FileType yaml setlocal tabstop=2 shiftwidth=2 softtabstop=2

"" Key binds start here
" bind F4 to hlsearch
set hlsearch
noremap <F4> :set hlsearch! hlsearch?<CR>

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" toggle paste mode
set pastetoggle=<F2>

" move lines with Ctrl+Arrows
nnoremap <ESC>[1;5A :m .-2<CR>
nnoremap <ESC>[1;5B :m .+1<CR>
nnoremap <ESC>[1;5C :><CR>
nnoremap <ESC>[1;5D :<<CR>

vnoremap <ESC>[1;5A :m '<-2<CR>gv
vnoremap <ESC>[1;5B :m '>+1<CR>gv
vnoremap <ESC>[1;5C :><CR>gv
vnoremap <ESC>[1;5D :<<CR>gv

inoremap <ESC>[1;5A <Esc>:m .-2<CR>gi
inoremap <ESC>[1;5B <Esc>:m .+1<CR>gi
inoremap <ESC>[1;5C <Esc>:><CR>gi
inoremap <ESC>[1;5D <Esc>:<<CR>gi
" map <F5> to comment and <F6> to pseudo uncomment
" ugly block comment macro
let @a='I#OBOA'
noremap <F5> @a
noremap <F6> x

""" Plugins
"" pathogen
execute pathogen#infect()

"" vim-airline
" hide mode indicator from vanilla vim
set noshowmode
" autoshow
set laststatus=2
" fugitive integration
let g:airline#extensions#branch#enabled = 1
" powerline font
set guifont=DejaVu\ Sans\ Mono\ for\ Powerline\ 8
let g:airline_powerline_fonts = 1
"" neocomplete
let g:neocomplete#enable_at_startup = 1

source ~/.vimrc.more
